Include: _clear.vader

Execute (Setup):
  let g:opts = {'history': ['apple', 'applejuice', 'appleinc']}

Do (C-N):
  :let g:got = pseudocl#start(g:opts)\<cr>
  \<c-n>\<cr>
Execute:
  AssertEqual '', g:got

Do (C-P):
  :let g:got = pseudocl#start(g:opts)\<cr>
  \<c-p>\<cr>
Execute:
  AssertEqual 'appleinc', g:got

Do (C-P Up):
  :let g:got = pseudocl#start(g:opts)\<cr>
  abc\<c-p>\<up>\<cr>
Execute:
  AssertEqual 'applejuice', g:got

Do (C-P S-Up Up PageUp):
  :let g:got = pseudocl#start(g:opts)\<cr>
  abc\<c-p>\<up>\<s-up>\<pageup>\<cr>
Execute:
  AssertEqual 'apple', g:got

Do (C-P C-P C-P C-P C-N):
  :let g:got = pseudocl#start(g:opts)\<cr>
  abc\<c-p>\<c-p>\<c-p>\<c-p>\<c-n>\<cr>
Execute:
  AssertEqual 'applejuice', g:got

Do (C-P C-P C-P C-P S-Down Change C-P):
  :let g:got = pseudocl#start(g:opts)\<cr>
  abc\<c-p>\<c-p>\<c-p>\<c-p>\<s-down>
  !!!
  \<c-p>
  \<cr>
Execute:
  AssertEqual 'appleinc', g:got

Do (C-P C-P C-P C-P PageDown Change C-P Down):
  :let g:got = pseudocl#start(g:opts)\<cr>
  abc\<c-p>\<c-p>\<c-p>\<c-p>\<pagedown>
  !!!
  \<c-p>
  \<down>
  \<cr>
Execute:
  AssertEqual 'applejuice!!!', g:got

Execute (Cleanup):
  unlet g:opts

Include: _restore.vader
